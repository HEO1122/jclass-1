package day15;

public class Test03 extends Test02 {
	private final int NO;
	private final int NUM = 0;
	
	public Test03() {
		NO = 1000;
		/*
			생성자의 역할
				: 멤버의 초기화
				<== 생성자 함수는 해당 클래스가 객체가 될 때 실행되는 함수로
					객체가 될 때 그 클래스의 멤버변수를 초기화해주는 작업을 한다.
					이 경우는 final 속성이 부여된 변수이지만
					아직 데이터가 결정이 안되어있는 상태이다.
					따라서 생성자에서 데이터를 정해줄 수 있게된다.
					( 처음 데이터를 결정하는 단계가 되기때문에 가능하다. )
		 */
		
		/*
		NUM = 500;
			==> final 속성이 부여된 변수는
				***
				한번 데이터가 결정이되면 데이터를 변경할 수 없기 때문에 
				이 경우는 에러가 발생한다.
		*/
	}
	
	/*
		오버라이드 규칙
			
			0. 상속을 받아야 한다.
			1. 함수의 원형을 유지한다. ( 함수의 원형 : 반환값타입 + 함수이름 + 매개변수리스트 )
			2. 접근지정자는 같거나 넓은 방향으로 한다.
			3. 예외처리는 같거나 좁은 방향으로 한다.
	 */
	
	// Test02.abc() 오버라이딩
	/*
		abc() 는 final 속성이 부여된 함수이고
		이 속성이 부여된 함수는 
		중요한 기능의 함수이므로 
		함부로 고쳐서 사용하지 말라고 
		오버라이드를 막아놓는 함수이다.
	public void abc() {
		System.out.println("### 여기는 Test03 클래스의 abc() 오버라이딩 ***");
	}
	*/
	
}
