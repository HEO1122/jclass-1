#day02

자바 프로그램의 토큰 구분
==> 컴파일러는 토큰 단위로 번역을 시도한다.
	따라서 개발자는 컴파일러가 번역하는 토큰을 구분해줘야 한다.
	이것이 ";" 이라는 기호를 이용해서 구분하게 된다.
	
	우리가 습관적으로
		int a = 10;
	이라고 기술한 이유가 토큰을 구분하기 위한 기호였다.
	
	결론적으로 토큰이란 하나의 명령이 종료되었음을 알려주는 기호이다.
	
	만약 개발자 토큰을 구분하지 않으면 오류가 날 수 있다.
	
	예 ]
		int a = 10
		int b = 20;
		==> 컴파일러는 두줄을 하나의 명령으로 인식해서
			처리하게 될 것이고 
			이런 명령형식은 자바에는 존재하지 않으므로
			에러가 발생한다.
			
	예 ]
		int a = 10; int b = 20;
		==> 한 줄로 입력했지만
			두개의 명령으로 인식하여 먼저
				int a = 10;
			만 컴파일하고
				int b= 20;
			은 따로 컴파일하게 되서
			안전하게 컴파일이 완성이 된다.
			
	참고 ]
		토큰기호는 ; 대신 {} 기호가 그역할을 대신할 수 있다.
		
	예 ]
		if(조건식) {
			처리내용
		}
		==> 이경우 ; 은 없지만 } 가 그역할을 대신하기 때문에
			컴파일러는 {} 를 별도로 컴파일하게 된다.
			토큰이 발생했다. 라고 이야기할 수 있다.
			
참고 ]
	==> 키보드를 이용해서 데이터 입력 받기
		( 이 부분은 OOP(객체지향)이론을 먼저 공부한 후 이해할 수 있다. )
		
		1. class가 만들어지기 이전에
				import java.util.*;
			라는 명령을 이용해서 사용할 라이브러리를 등록한다.
		2. 프로그램에 들어가는(주로 main함수 내에서)
		
			Scanner sc = new Scanner(System.in);
			이라는 명령을 이용해서 키보드를 통해서 입력받을 도구를
			준비한다.
		
		3. 키보드를 통해서 입력받을 필요가 생기면...
			
			변수 = sc.nextXXX();
			명령을 이용해서 데이터를 입력 받으면 된다.
			
			이때 XXX는 입력받을 데이터의 종류에 따라서 달라진다.
			
			예 ]
				문자열을 입력받고 싶으면
				
				String str = sc.nextLine();
				
				정수로 입력받고 싶으면
				int num = sc.nextInt();
				
				실수로 입력받고 싶으면
				float num = sc.nextFloat();

참고 ]
	숫자형식의 문자열을 숫자로 변환시키는 방법
		
		예 ]
			
			"123"	==> 콘솔화면에서는 숫자로 보이지만
						실제로는 문자열의 데이터이다.
						이것은 사칙연산을 할 수 없는 데이터이다.
						
			이것을 실제 계산이 가능한 숫자로 변환하는 방법
				
				int no = Integer.parseInt("문자열데이터");
				
				==> int no = Integer.parseInt("123");
					==> 문자열 "123"을 정수 123로 변환시켜주는 함수이다.
					
--------------------------------------------------------------
문제 ]
	세자리 숫자를 입력받아서
	100을 뺀 값을 출력해주는 프로그램을 작성하세요.

문제 2 ]
	사각형의 가로와 세로의 길이를 정수로 입력받아서
	넓이를 출력해주는 프로그램을 작성하세요.
	
문제 3 ]
	삼각형의 밑변과 높이를 정수로 입력받아서
	넓이를 출력해주는 프로그램을 작성하세요.
	
문제 4 ] 변수 만드는 연습용...
	친구의 이름, 나이, 신장, 전화번호를 입력받아서
	출력해주는 프로그램을 작성하세요.
--------------------------------------------------------------








