논리 연산자
==> 두 논리값 사이의 관계를 따지는 연산자.
	==> 논리값을 AND, OR, NOT 방식으로 관계를 알아보는 연산자
	
	논리연산자의 연산 결과는 논리값이 나온다.
	
	주의사항 ]
		데이터는 반드시 논리값이어야 한다.
		
	기호 ]
		!	-	NOT
		|	- 	OR	(또는 의 의미)
		||	- 	OR(또는 의 의미 : 절삭연산)
		&	- 	AND (그리고 의 의미)
		&&	- 	AND(그리고 의 의미 : 절삭연산)
		
	진가표 ]
		
		데이터1 	데이터2			OR(|, ||)	AND(&, &&)
		true	true				true		true
		true	false				true		false
		false	true				true		false	
		false	false				false		false
		
	참고 ]
		컴퓨터는 한번의 질문에 오직 한개만 대답할 수 있다.
		즉, 크면 큰거고, 작으면 작은거다.
		
		수학식에서
			10 < x < 20
		와 같은 표현식은 가능했지만
		컴퓨터의 연산식에서는 이렇게 하면 안된다.
		
		따라서 이경우 연산식은
			x > 10 & x < 20
		
	참고 ]
		
		수학 계산식에서 곱하기 기호는 생략할 수 있어지만
		자바(모든 프로그램 언어의) 연산식에서 곱하기 기호는 생략하면 안된다.
		
		예 ]
			y = 2x	==> 수학에서는 가능하지만 프로그램언어에서는 불가능하다.
			==> y = 2 * x;
			
	참고 ]
		절삭 연산
		==> 특정부분의 계산식은 계산하지 않도록 한다.
		
--------------------------------------------------------------

쉬프트 연산자
==> 데이터 비트를 지정한 방향으로 지정한 횟수만큼 이동시키는 연산자
	
	***
	중앙처리장치를 거치지 않는 연산을 한다.
	메모리상에서 연산이 이루어지는 연산자.
	
	사용기호 ]
		>>	: / 2 ^ n
		<<	: * 2 ^ n
		
---------------------------------------------------------------
조건연산자(3항연산자)
==> 하나의 명령에 가까운 형식
	조건에 따라서 처리할 내용을 구분해서 처리하도록 하는 연산자.
	
	형식 ]
		(조건식) ? 처리내용1 : 처리내용2;
		
	의미 ]
		조건식이 true이면 처리내용1을 반환하고
			  false이면 처리내용2를 반환한다.
			  
	if 명령을 단순화 시킨 의미를 가진 명령이다.
	
	참고 ]
		모든 연산자가 중첩 처리될 수 있듯이
		조건 연산자도 중첩 처리될 수 있다.
		
		예 ]
			(조건식1) ? (조건식2 ? (a) : (b)) : (조건식3 ? (c) : (d));
			
			의미 ]
				조건식1이 참이면 조건식2가 참일 경우 a 를 반환하고
									거짓일 경우 b를 반환
						거짓이면 조건식3가 참인경우 c를 반환하고
									  거짓인 경우 d를 반환한다.
									  
			반환값이 있으므로 일반적으로 왼쪽에 변수를 만들어서
			변수에 반환값을 담아서 처리하는 경우가 많다.
			
			
		

	