# day07

배열의 복사
	
	1. 얕은 복사
		==> 주소만 복사는 방법
			
			특징 ]
				데이터는 공유하므로 한 쪽에서 수정하면
				다른 쪽에서도 수정된 내용을 사용하게 된다.
				
			방법 ]
				
				int[] a = new int[5];
				....
				
				int[] b;
				==> 이것은 배열 주소를 기억할 변수를 만들어 주는 것.
					이때 b에는 데이터를 기억할 수 없다.
					오직 주소만 기억할 수 있다.
					이것이 얕은 복사이다.
					
				b = a;
			
			**
			참고 ]
				얕은 복사는 지역 변수는 그 지역에서만 활동하므로
				다른 지역에서 Heap 영역의 데이터를
				사용할 목적으로 많이 사용되는 기법
				
				다른 지역에서 만든 Heap 영역의 데이터를
				다른 지역에서도 같이 사용할 목적으로 많이 사용되는 기법.
		
	2. 깊은 복사
		==> 데이터까지 모두 복사하는 방법
			==> 데이터가 복사되었다는 것은
				Heap 영역에 다른 곳에 데이터가 한번 더 만들어진다라는 말이므로
				데이터의 주소가 달라지게 되므로
				
				따라서 특징은
				복사된 데이터는 독립적으로 사용된다.
				
		방법 ]
			명령을 사용해서 처리하면된다.
			
		명령 ]
			
			System.arraycopy(#1, #2, #3, #4, #5);
				
				#1	- 원본 데이터의 주소
				#2	- 원본 데이터에서 복사를 시작할 위치
				#3  - 복사 받을 배열의 주소
				#4	- 복사 받을 주소의 시작 위치
				#5	- 복사 받을 데이터의 갯수
		
====================================================================================================
	배열의 단점
		
		1. 한번 배열의 크기를 정하면 크기 조절이 불가능하다.
			예 ]
				int[] no = new int[5];
				==> 정수 다섯개를 관리할 배열
				
				...
				정수 열개를 관리하도록 데이터가 늘어났다.
				
				int[] no2 = new int[10];
				==> no를 깊은 복사를 해서 데이터를 복사해야 한다.
				
		2. 같은 형태의 데이터만 관리할 수 있다.
		